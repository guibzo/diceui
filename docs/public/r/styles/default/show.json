{
  "name": "show",
  "type": "registry:component",
  "files": [
    {
      "path": "components/show.tsx",
      "content": "import type { ReactNode } from \"react\";\n\ninterface ShowProps<T> {\n  when: T;\n  fallback?: ReactNode;\n  children: (item: NonNullable<T>) => ReactNode;\n}\n\nconst Show = <T,>({ when: condition, fallback = null, children }: ShowProps<T>) => {\n  if (!condition) {\n    return <>{fallback}</>;\n  }\n\n  return typeof children === \"function\"\n    ? children(condition as NonNullable<T>)\n    : children;\n};\n\nShow.displayName = \"Show\";\n\nexport { Show };\nexport type { ShowProps };",
      "type": "registry:component",
      "target": ""
    }
  ]
}
